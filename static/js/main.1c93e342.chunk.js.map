{"version":3,"sources":["serviceWorker.js","OutputFormatSelection.js","OSSelector.js","ControlledAccordions.js","ChecksumResolver.js","index.js"],"names":["Boolean","window","location","hostname","match","OutputFormatSelection","props","outputFormat","setOutputFormat","style","FormControl","component","FormLabel","RadioGroup","aria-label","name","value","onChange","event","target","FormControlLabel","control","Radio","label","OSSelector","operatingSystem","setOperatingSystem","ControlledAccordions","DarkerDisabledTextField","withStyles","root","marginRight","color","TextField","setExpanded","x","setState","expanded","handleChange","panel","isExpanded","getCommand","state","fileName","activationBytes","fileNameWithoutExtension","split","osMap","os","cmd","discriminator","filter","codec","format","bin","di","classes","this","className","Accordion","AccordionSummary","expandIcon","aria-controls","id","Typography","heading","secondaryHeading","AccordionDetails","display","paddingLeft","disabled","multiline","variant","margin","fullWidth","autoComplete","aria-readonly","fontSize","InputProps","readOnly","endAdornment","text","IconButton","React","Component","theme","width","typography","pxToRem","flexBasis","flexShrink","palette","secondary","ChecksumResolver","Copyright","align","Link","href","Date","getFullYear","setChecksum","length","checksum","isChecksumValid","RegExp","test","isInputInvalid","requestActivationBytes","fetch","then","res","json","result","success","error","acceptFile","files","a","file","slic","slice","arrayBuffer","results","buf2hex","buffer","Array","prototype","map","call","Uint8Array","toString","join","Container","maxWidth","CssBaseline","paper","Avatar","avatar","form","noValidate","noClick","onDrop","acceptedFiles","console","log","getRootProps","getInputProps","required","autoFocus","Button","onClick","Box","mt","marginTop","spacing","flexDirection","alignItems","backgroundColor","main","ReactGA","initialize","pageview","pathname","search","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1c93e342.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\n\r\nexport default function OutputFormatSelection(props) {\r\n\r\n    const { outputFormat, setOutputFormat, style } = props;\r\n    \r\n    const handleChange = (event) => {\r\n       \r\n        setOutputFormat(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" style={style}>\r\n            <FormLabel component=\"legend\">Output Format</FormLabel>\r\n            <RadioGroup aria-label=\"format\" name=\"format\" value={outputFormat} onChange={handleChange}>\r\n                <FormControlLabel value=\"m4b\" control={<Radio />} label=\"AAC m4b\" />\r\n                <FormControlLabel value=\"flac\" control={<Radio />} label=\"FLAC hq\" />\r\n                <FormControlLabel value=\"mp3\" control={<Radio />} label=\"Lame mp3\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\n\r\nexport default function OSSelector(props) {\r\n\r\n    const { operatingSystem, setOperatingSystem, style } = props;\r\n\r\n    const handleChange = (event) => setOperatingSystem(event.target.value);\r\n\r\n    return (\r\n        <FormControl component=\"fieldset\" style={style}>\r\n            <FormLabel component=\"legend\">Operating System</FormLabel>\r\n            <RadioGroup aria-label=\"format\" name=\"format\" value={operatingSystem} onChange={handleChange}>\r\n                <FormControlLabel value=\"win\" control={<Radio />} label=\"Windows\" />\r\n                <FormControlLabel value=\"linux\" control={<Radio />} label=\"Linux\" />\r\n                <FormControlLabel value=\"osx\" control={<Radio />} label=\"Mac\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport { Accordion, AccordionDetails, AccordionSummary } from '@material-ui/core';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FileCopyOutlined from '@material-ui/icons/FileCopyOutlined';\r\n\r\n// import {ExpandMoreIcon, FileCopyOutlined} from '@material-ui/icons';\r\n\r\nimport OutputFormatSelection from './OutputFormatSelection'\r\nimport OSSelector from './OSSelector'\r\n\r\n\r\nimport { Radio, RadioGroup } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nclass ControlledAccordions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: \"\",\r\n            outputFormat: \"m4b\",\r\n            operatingSystem: \"win\"\r\n        };\r\n    }\r\n    DarkerDisabledTextField = withStyles({\r\n        root: {\r\n            marginRight: 8,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: \"rgba(0, 0, 0, 0.6)\"\r\n            }\r\n        }\r\n    })(TextField);\r\n\r\n    setExpanded = x => this.setState({ expanded: x })\r\n    handleChange = (panel) => (event, isExpanded) => {\r\n        this.setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    getCommand = () => {\r\n        const { outputFormat, operatingSystem } = this.state;\r\n        let { fileName, activationBytes } = this.props;\r\n\r\n        activationBytes = activationBytes ?? \"00000000\";\r\n\r\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -ss 5 -to 20 -c copy out-t01.m4a\r\n        // faster:\r\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -map_metadata 0 -id3v2_version 3 -ss 5 -to 20 -vn out-t02.m4a\r\n        // ffmpeg.exe -y -activation_bytes 9f786605 -i  '.\\INFINITUM - Die Ewigkeit der Sterne.AAX' -map_metadata 0 -ss 5 -to 20 -vn out-t02.m4a\r\n\r\n        // -vn: As an output option, disables video recording i.e. automatic selection or mapping of any video stream. For full manual control see the -map option.\r\n        // \" works on ps and cmd as discriminator\r\n\r\n        const outputFormatCodecMaps = [\r\n            { format: \"m4b\", codec: \"copy\" },\r\n            { format: \"flac\", codec: \"flac\" },\r\n            { format: \"mp3\", codec: \"libmp3lame\" },\r\n        ];\r\n\r\n        const osToBinMaps = [\r\n            { os: \"win\", cmd: \"ffmpeg.exe\", discriminator: '\"' },\r\n            { os: \"linux\", cmd: \"./ffmpeg\", discriminator: '\\'' },\r\n            { os: \"osx\", cmd: \"./ffmpeg\", discriminator: '\\'' },\r\n        ];\r\n\r\n        let fileNameWithoutExtension = fileName.split('.')[0];\r\n        fileNameWithoutExtension = fileNameWithoutExtension == 'input' ? 'output' : fileNameWithoutExtension;\r\n\r\n        const osMap =  osToBinMaps.filter(x => x.os == operatingSystem)[0];\r\n\r\n        const codec = outputFormatCodecMaps.filter(x => x.format == outputFormat)[0].codec;\r\n        const bin = osMap.cmd;\r\n        const di = osMap.discriminator;\r\n        \r\n        return `${bin} -y`\r\n            + ` -activation_bytes ${activationBytes} -i  ${di}.\\\\${fileName}${di}`\r\n            + ` -map_metadata 0`\r\n            + ` -id3v2_version 3`\r\n            + ` -codec:a ${codec}`\r\n            + ` -vn ${di}${fileNameWithoutExtension}.${outputFormat}${di}`;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { expanded, outputFormat, operatingSystem } = this.state;\r\n\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Accordion expanded={expanded === 'panel2'} onChange={this.handleChange('panel2')}>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel2bh-content\"\r\n                        id=\"panel2bh-header\"\r\n                    >\r\n                        <Typography className={classes.heading}>Command</Typography>\r\n                        <Typography className={classes.secondaryHeading}>\r\n                            Generate ffmpeg command\r\n                </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{ display: 'block' }}>\r\n                        <OutputFormatSelection\r\n                            outputFormat={outputFormat}\r\n                            setOutputFormat={x => this.setState({ outputFormat: x })}\r\n                        />\r\n\r\n                        <OSSelector\r\n                            operatingSystem={operatingSystem}\r\n                            setOperatingSystem={x => this.setState({ operatingSystem: x })}\r\n                            style={{ paddingLeft: '20px' }}\r\n                        />\r\n\r\n                        <this.DarkerDisabledTextField\r\n                            value={this.getCommand()}\r\n                            disabled\r\n                            multiline\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"activationBytes\"\r\n                            label=\"cmd\"\r\n                            name=\"activationBytes\"\r\n                            autoComplete=\"activationBytes\"\r\n                            aria-readonly\r\n                            fontSize={5}\r\n\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                                endAdornment: (\r\n                                    <CopyToClipboard text={this.getCommand()}>\r\n                                        <IconButton >\r\n                                            <FileCopyOutlined />\r\n                                        </IconButton>\r\n                                    </CopyToClipboard>\r\n                                )\r\n                            }}\r\n\r\n                        />\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n\r\n});\r\n\r\nexport default withStyles(useStyles)(ControlledAccordions);\r\n","import React, { useState } from 'react';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Dropzone from 'react-dropzone'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FileCopyOutlined from '@material-ui/icons/FileCopyOutlined';\r\n\r\n\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport ControlledAccordions from './ControlledAccordions'\r\n\r\n\r\nconst useStyles = theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n\r\n    //Accordeon\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n});\r\n\r\nclass ChecksumResolver extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checksum: \"\",\r\n            fileName: \"input.aax\"\r\n        }\r\n    }\r\n\r\n    DarkerDisabledTextField = withStyles({\r\n        root: {\r\n            marginRight: 8,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n                color: \"rgba(0, 0, 0, 0.6)\"\r\n            }\r\n        }\r\n    })(TextField);\r\n\r\n    Copyright = (function () {\r\n        return (\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {'Copyright © '}\r\n                <Link color=\"inherit\" href=\"https://audible-tools.github.io/\">\r\n                    audible-tools\r\n            </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n            </Typography>\r\n        );\r\n    })\r\n\r\n    setChecksum = (value) => {\r\n        if (value.length > 40) {\r\n            return;\r\n        }\r\n        this.setState({ checksum: value })\r\n    }\r\n\r\n    isChecksumValid = () => {\r\n        const { checksum } = this.state;\r\n        const regex = RegExp('[a-f0-9]{40}');\r\n        const testResults = regex.test(checksum);\r\n\r\n        return testResults;\r\n    }\r\n\r\n    isInputInvalid = () => {\r\n        const { checksum } = this.state;\r\n        if (!checksum || checksum === '') {\r\n            return false;\r\n        }\r\n        return !this.isChecksumValid();\r\n    };\r\n\r\n    requestActivationBytes = () => {\r\n        const { checksum } = this.state;\r\n\r\n        fetch(\"https://aax.api.j-kit.me/api/v2/activation/\" + checksum)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    const { success, activationBytes } = result;\r\n                    if (success === true) {\r\n                        this.setState({ activationBytes: result.activationBytes });\r\n                    } else {\r\n                        this.setState({ activationBytes: 'UNKNOWN' });\r\n                    }\r\n\r\n\r\n                },\r\n                (error) => {\r\n                    this.setState({ activationBytes: 'UNKNOWN' });\r\n                }\r\n            )\r\n    }\r\n\r\n    buf2hex(buffer) { // buffer is an ArrayBuffer\r\n        return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('');\r\n    }\r\n\r\n    acceptFile = async files => {\r\n        const file = files[0];\r\n        // if (!file.name.toLowerCase().endsWith(\".aax\")) {\r\n        //     alert('FileType not supported!');\r\n        //     return;\r\n        // }\r\n\r\n        this.setState({ fileName: file.name });\r\n        const slic = file.slice(653, 653 + 20);\r\n        const results = this.buf2hex(await slic.arrayBuffer());\r\n        this.setChecksum(results)\r\n        this.requestActivationBytes();\r\n\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { checksum, activationBytes, fileName } = this.state;\r\n        //const acc = accAX();\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        AAX Checksum Resolver\r\n                    </Typography>\r\n\r\n                    <form className={classes.form} noValidate>\r\n                        <Dropzone\r\n                            noClick\r\n                            onDrop={acceptedFiles => {\r\n                                console.log(acceptedFiles);\r\n                                this.acceptFile(acceptedFiles);\r\n                                //const file = document.getElementById('fileInput').files[0];\r\n\r\n\r\n                            }}>\r\n                            {({ getRootProps, getInputProps }) => (\r\n                                <section>\r\n                                    <div {...getRootProps()}>\r\n                                        <input {...getInputProps()} />\r\n                                        <TextField\r\n                                            error={this.isInputInvalid()}\r\n                                            variant=\"outlined\"\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"checksum\"\r\n                                            label=\"Checksum or Drag&Drop .aax file -\"\r\n                                            name=\"checksum\"\r\n                                            autoComplete=\"checksum\"\r\n                                            autoFocus\r\n                                            onChange={(x) => this.setChecksum(x.target.value)}\r\n                                            value={checksum}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </section>\r\n                            )}\r\n                        </Dropzone>\r\n\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                this.requestActivationBytes();\r\n                            }}\r\n                            disabled={!this.isChecksumValid()}\r\n                        >\r\n                            Request Activation Bytes\r\n                        </Button>\r\n\r\n                        <this.DarkerDisabledTextField\r\n                            value={activationBytes}\r\n                            disabled\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            id=\"activationBytes\"\r\n                            label={activationBytes ? '' : \"Activation Bytes\"}\r\n                            name=\"activationBytes\"\r\n                            autoComplete=\"activationBytes\"\r\n                            aria-readonly\r\n\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                                endAdornment: (\r\n                                    <CopyToClipboard text={activationBytes}>\r\n                                        <IconButton >\r\n                                            <FileCopyOutlined />\r\n                                        </IconButton>\r\n                                    </CopyToClipboard>\r\n                                )\r\n                            }}\r\n\r\n                        />\r\n\r\n                    </form>\r\n                </div>\r\n                <ControlledAccordions\r\n                    fileName={fileName} \r\n                    activationBytes={activationBytes}\r\n                />\r\n                <Box mt={1}>\r\n                    <this.Copyright />\r\n                </Box>\r\n\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ChecksumResolver);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ChecksumResolver from './ChecksumResolver';\r\n\r\nimport ReactGA from 'react-ga';\r\nReactGA.initialize('UA-174657678-1');\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nReactDOM.render(\r\n  <ChecksumResolver />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}